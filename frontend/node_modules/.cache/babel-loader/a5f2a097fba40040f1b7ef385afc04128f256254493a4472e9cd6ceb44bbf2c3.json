{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://localhost:8000/api\";\nlet accessToken = null;\nconst api = axios.create({\n  baseURL: API_BASE,\n  withCredentials: true\n});\napi.interceptors.request.use(config => {\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return config;\n});\nlet isRefreshing = false;\nlet refreshSubscribers = [];\nfunction onRefreshed(token) {\n  refreshSubscribers.map(cb => cb(token));\n  refreshSubscribers = [];\n}\nfunction addRefreshSubscriber(cb) {\n  refreshSubscribers.push(cb);\n}\napi.interceptors.response.use(response => response, error => {\n  const originalRequest = error.config;\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    if (isRefreshing) {\n      return new Promise(resolve => {\n        addRefreshSubscriber(token => {\n          originalRequest.headers.Authorization = \"Bearer \" + token;\n          resolve(axios(originalRequest));\n        });\n      });\n    }\n    originalRequest._retry = true;\n    isRefreshing = true;\n    return axios.post(\"http://localhost:8000/api/auth/token/refresh/\", {}, {\n      withCredentials: true\n    }).then(res => {\n      const newAccess = res.data.access;\n      accessToken = newAccess;\n      onRefreshed(newAccess);\n      originalRequest.headers.Authorization = \"Bearer \" + newAccess;\n      return axios(originalRequest);\n    }).catch(err => {\n      accessToken = null;\n      window.location.href = \"/\";\n      return Promise.reject(err);\n    }).finally(() => {\n      isRefreshing = false;\n    });\n  }\n  return Promise.reject(error);\n});\nexport function setAccessToken(token) {\n  accessToken = token;\n}\nexport function getAccessToken() {\n  return accessToken;\n}\nexport function logout() {\n  accessToken = null;\n}\nexport default api;","map":{"version":3,"names":["axios","API_BASE","accessToken","api","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","isRefreshing","refreshSubscribers","onRefreshed","token","map","cb","addRefreshSubscriber","push","response","error","originalRequest","status","_retry","Promise","resolve","post","then","res","newAccess","data","access","catch","err","window","location","href","reject","finally","setAccessToken","getAccessToken","logout"],"sources":["C:/Users/Ideapad/Downloads/Gkh хакатон/Frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE = \"http://localhost:8000/api\";\r\n\r\nlet accessToken = null;\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE,\r\n  withCredentials: true,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  if (accessToken) {\r\n    config.headers.Authorization = `Bearer ${accessToken}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nlet isRefreshing = false;\r\nlet refreshSubscribers = [];\r\n\r\nfunction onRefreshed(token) {\r\n  refreshSubscribers.map((cb) => cb(token));\r\n  refreshSubscribers = [];\r\n}\r\n\r\nfunction addRefreshSubscriber(cb) {\r\n  refreshSubscribers.push(cb);\r\n}\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\r\n      if (isRefreshing) {\r\n        return new Promise((resolve) => {\r\n          addRefreshSubscriber((token) => {\r\n            originalRequest.headers.Authorization = \"Bearer \" + token;\r\n            resolve(axios(originalRequest));\r\n          });\r\n        });\r\n      }\r\n      originalRequest._retry = true;\r\n      isRefreshing = true;\r\n      return axios\r\n        .post(\"http://localhost:8000/api/auth/token/refresh/\", {}, { withCredentials: true })\r\n        .then((res) => {\r\n          const newAccess = res.data.access;\r\n          accessToken = newAccess;\r\n          onRefreshed(newAccess);\r\n          originalRequest.headers.Authorization = \"Bearer \" + newAccess;\r\n          return axios(originalRequest);\r\n        })\r\n        .catch((err) => {\r\n          accessToken = null;\r\n          window.location.href = \"/\";\r\n          return Promise.reject(err);\r\n        })\r\n        .finally(() => {\r\n          isRefreshing = false;\r\n        });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport function setAccessToken(token) {\r\n  accessToken = token;\r\n}\r\n\r\nexport function getAccessToken() {\r\n  return accessToken;\r\n}\r\n\r\nexport function logout() {\r\n  accessToken = null;\r\n}\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,IAAIC,WAAW,GAAG,IAAI;AAEtB,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACvBC,OAAO,EAAEJ,QAAQ;EACjBK,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,IAAIR,WAAW,EAAE;IACfQ,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUV,WAAW,EAAE;EACxD;EACA,OAAOQ,MAAM;AACf,CAAC,CAAC;AAEF,IAAIG,YAAY,GAAG,KAAK;AACxB,IAAIC,kBAAkB,GAAG,EAAE;AAE3B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1BF,kBAAkB,CAACG,GAAG,CAAEC,EAAE,IAAKA,EAAE,CAACF,KAAK,CAAC,CAAC;EACzCF,kBAAkB,GAAG,EAAE;AACzB;AAEA,SAASK,oBAAoBA,CAACD,EAAE,EAAE;EAChCJ,kBAAkB,CAACM,IAAI,CAACF,EAAE,CAAC;AAC7B;AAEAf,GAAG,CAACI,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC1BY,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EACT,MAAMC,eAAe,GAAGD,KAAK,CAACZ,MAAM;EACpC,IAAIY,KAAK,CAACD,QAAQ,IAAIC,KAAK,CAACD,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC9E,IAAIZ,YAAY,EAAE;MAChB,OAAO,IAAIa,OAAO,CAAEC,OAAO,IAAK;QAC9BR,oBAAoB,CAAEH,KAAK,IAAK;UAC9BO,eAAe,CAACZ,OAAO,CAACC,aAAa,GAAG,SAAS,GAAGI,KAAK;UACzDW,OAAO,CAAC3B,KAAK,CAACuB,eAAe,CAAC,CAAC;QACjC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACAA,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7BZ,YAAY,GAAG,IAAI;IACnB,OAAOb,KAAK,CACT4B,IAAI,CAAC,+CAA+C,EAAE,CAAC,CAAC,EAAE;MAAEtB,eAAe,EAAE;IAAK,CAAC,CAAC,CACpFuB,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI,CAACC,MAAM;MACjC/B,WAAW,GAAG6B,SAAS;MACvBhB,WAAW,CAACgB,SAAS,CAAC;MACtBR,eAAe,CAACZ,OAAO,CAACC,aAAa,GAAG,SAAS,GAAGmB,SAAS;MAC7D,OAAO/B,KAAK,CAACuB,eAAe,CAAC;IAC/B,CAAC,CAAC,CACDW,KAAK,CAAEC,GAAG,IAAK;MACdjC,WAAW,GAAG,IAAI;MAClBkC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;MAC1B,OAAOZ,OAAO,CAACa,MAAM,CAACJ,GAAG,CAAC;IAC5B,CAAC,CAAC,CACDK,OAAO,CAAC,MAAM;MACb3B,YAAY,GAAG,KAAK;IACtB,CAAC,CAAC;EACN;EACA,OAAOa,OAAO,CAACa,MAAM,CAACjB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,SAASmB,cAAcA,CAACzB,KAAK,EAAE;EACpCd,WAAW,GAAGc,KAAK;AACrB;AAEA,OAAO,SAAS0B,cAAcA,CAAA,EAAG;EAC/B,OAAOxC,WAAW;AACpB;AAEA,OAAO,SAASyC,MAAMA,CAAA,EAAG;EACvBzC,WAAW,GAAG,IAAI;AACpB;AAEA,eAAeC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}