{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ideapad\\\\CP_XACATON\\\\Frontend\\\\src\\\\VideoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './VideoPage.css';\nimport logo from './logo.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [videos, setVideos] = useState([]);\n  const [hoveredVideo, setHoveredVideo] = useState(null);\n  const [likes, setLikes] = useState({});\n  const [dislikes, setDislikes] = useState({});\n  const [refreshing, setRefreshing] = useState(false); // New state for refreshing\n\n  // Обработка события прокрутки\n  useEffect(() => {\n    const handleWheel = event => {\n      if (event.ctrlKey) {\n        event.preventDefault(); // Отменяем поведение по умолчанию для прокрутки с Ctrl\n      }\n    };\n    window.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n\n  // Функция получения видео с сервера\n  const fetchVideos = async (retryCount = 0) => {\n    const apps_url = 'http://localhost:8000/api/videos/';\n    setLoading(true);\n    try {\n      const response = await fetch(apps_url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      const data = await response.json();\n      console.log('Videos received from server:', data); // Логирование полученных видео\n      setVideos(data);\n    } catch (error) {\n      if (retryCount < 3) {\n        setTimeout(() => {\n          fetchVideos(retryCount + 1);\n        }, 2000);\n      } else {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Используем useEffect для загрузки видео один раз при загрузке компонента\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  // Функция для обновления лайков и дизлайков на сервере и получения обновленных видео\n  const handleRefresh = async () => {\n    setRefreshing(true); // Set refreshing state to true\n    const update_url = 'http://localhost:8000/videos/update_likes_dislikes/';\n    const updates = videos.map(video => ({\n      uid: video.uid,\n      has_liked: likes[video.uid] || false,\n      has_disliked: dislikes[video.uid] || false\n    }));\n    console.log('Updates to send:', updates);\n    console.log('Updates to send:', updates); // Логирование данных, которые отправляются на сервер\n\n    try {\n      const response = await fetch(update_url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update videos');\n      }\n      const result = await response.json();\n      console.log('Response from server:', result);\n      await fetchVideos(); // Fetch fresh video data\n    } catch (error) {\n      console.error('Error updating videos:', error);\n    } finally {\n      setRefreshing(false); // Reset refreshing state to false\n    }\n  };\n\n  // Функция для обработки ��айка видео\n  const handleLike = uid => {\n    setLikes(prevLikes => ({\n      ...prevLikes,\n      [uid]: !prevLikes[uid] // Переключаем лайк по uid\n    }));\n    setDislikes(prevDislikes => ({\n      ...prevDislikes,\n      [uid]: false // Сбрасываем дизлайк\n    }));\n  };\n\n  // Функция для обработки дизлайка видео\n  const handleDislike = uid => {\n    setDislikes(prevDislikes => ({\n      ...prevDislikes,\n      [uid]: !prevDislikes[uid] // Переключаем дизлайк по uid\n    }));\n    setLikes(prevLikes => ({\n      ...prevLikes,\n      [uid]: false // Сбрасываем лайк\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-list\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-item\",\n        onMouseEnter: () => setHoveredVideo(video),\n        onMouseLeave: () => setHoveredVideo(null),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `reaction-btn ${likes[video.uid] ? 'active' : ''}`,\n            onClick: () => handleLike(video.uid),\n            children: \"\\u2022\\u1D17\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `reaction-btn ${dislikes[video.uid] ? 'noactive' : ''}`,\n            onClick: () => handleDislike(video.uid),\n            children: \"\\u02D9\\u25E0\\u02D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this), hoveredVideo && hoveredVideo.uid === video.uid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this), \" \", video.category_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 41\n            }, this), \" \", video.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-date\",\n          children: video.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)]\n      }, video.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-recommendations\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-btn\",\n        onClick: handleRefresh,\n        disabled: refreshing // Disable button while refreshing\n        ,\n        children: refreshing ? 'Обновление...' : 'Обновить рекомендации'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoPage, \"w8g1kYgxZHm8mDsKeOKRVHXtKCk=\");\n_c = VideoPage;\nexport default VideoPage;\nvar _c;\n$RefreshReg$(_c, \"VideoPage\");","map":{"version":3,"names":["React","useState","useEffect","logo","jsxDEV","_jsxDEV","VideoPage","_s","loading","setLoading","videos","setVideos","hoveredVideo","setHoveredVideo","likes","setLikes","dislikes","setDislikes","refreshing","setRefreshing","handleWheel","event","ctrlKey","preventDefault","window","addEventListener","passive","removeEventListener","fetchVideos","retryCount","apps_url","response","fetch","ok","Error","statusText","data","json","console","log","error","setTimeout","handleRefresh","update_url","updates","map","video","uid","has_liked","has_disliked","method","headers","body","JSON","stringify","result","handleLike","prevLikes","prevDislikes","handleDislike","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onMouseEnter","onMouseLeave","title","onClick","category_name","created_at","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Ideapad/CP_XACATON/Frontend/src/VideoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './VideoPage.css';\r\nimport logo from './logo.jpg';\r\n\r\nconst VideoPage = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [videos, setVideos] = useState([]);\r\n    const [hoveredVideo, setHoveredVideo] = useState(null);\r\n    const [likes, setLikes] = useState({});\r\n    const [dislikes, setDislikes] = useState({});\r\n    const [refreshing, setRefreshing] = useState(false); // New state for refreshing\r\n\r\n    // Обработка события прокрутки\r\n    useEffect(() => {\r\n        const handleWheel = (event) => {\r\n            if (event.ctrlKey) {\r\n                event.preventDefault(); // Отменяем поведение по умолчанию для прокрутки с Ctrl\r\n            }\r\n        };\r\n\r\n        window.addEventListener('wheel', handleWheel, { passive: false });\r\n\r\n        return () => {\r\n            window.removeEventListener('wheel', handleWheel);\r\n        };\r\n    }, []);\r\n\r\n    // Функция получения видео с сервера\r\n    const fetchVideos = async (retryCount = 0) => {\r\n        const apps_url = 'http://localhost:8000/api/videos/';\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(apps_url);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok ' + response.statusText);\r\n            }\r\n            const data = await response.json();\r\n            console.log('Videos received from server:', data); // Логирование полученных видео\r\n            setVideos(data);\r\n        } catch (error) {\r\n            if (retryCount < 3) {\r\n                setTimeout(() => {\r\n                    fetchVideos(retryCount + 1);\r\n                }, 2000);\r\n            } else {\r\n                console.error('There has been a problem with your fetch operation:', error);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Используем useEffect для загрузки видео один раз при загрузке компонента\r\n    useEffect(() => {\r\n        fetchVideos();\r\n    }, []);\r\n\r\n    // Функция для обновления лайков и дизлайков на сервере и получения обновленных видео\r\n    const handleRefresh = async () => {\r\n        setRefreshing(true); // Set refreshing state to true\r\n        const update_url = 'http://localhost:8000/videos/update_likes_dislikes/';\r\n\r\n        const updates = videos.map(video => ({\r\n            uid: video.uid, \r\n            has_liked: likes[video.uid] || false,\r\n            has_disliked: dislikes[video.uid] || false\r\n        }));\r\n\r\n        console.log('Updates to send:', updates);\r\n        console.log('Updates to send:', updates); // Логирование данных, которые отправляются на сервер\r\n\r\n\r\n        try {\r\n            const response = await fetch(update_url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update videos');\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log('Response from server:', result);\r\n\r\n            await fetchVideos(); // Fetch fresh video data\r\n        } catch (error) {\r\n            console.error('Error updating videos:', error);\r\n        } finally {\r\n            setRefreshing(false); // Reset refreshing state to false\r\n        }\r\n    };\r\n\r\n    // Функция для обработки ��айка видео\r\n    const handleLike = (uid) => {\r\n        setLikes(prevLikes => ({\r\n            ...prevLikes,\r\n            [uid]: !prevLikes[uid], // Переключаем лайк по uid\r\n        }));\r\n        setDislikes(prevDislikes => ({\r\n            ...prevDislikes,\r\n            [uid]: false, // Сбрасываем дизлайк\r\n        }));\r\n    };\r\n\r\n    // Функция для обработки дизлайка видео\r\n    const handleDislike = (uid) => {\r\n        setDislikes(prevDislikes => ({\r\n            ...prevDislikes,\r\n            [uid]: !prevDislikes[uid], // Переключаем дизлайк по uid\r\n        }));\r\n        setLikes(prevLikes => ({\r\n            ...prevLikes,\r\n            [uid]: false, // Сбрасываем лайк\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"video-page\">\r\n            <img src={logo} alt=\"Логотип\" className=\"logo\" />\r\n            {loading ? (\r\n                <div className=\"loading-indicator\">Загрузка данных...</div>\r\n            ) : (\r\n                <div className=\"video-list\">\r\n                    {videos.map((video) => (\r\n                        <div\r\n                            className=\"video-item\"\r\n                            key={video.uid}\r\n                            onMouseEnter={() => setHoveredVideo(video)}\r\n                            onMouseLeave={() => setHoveredVideo(null)}\r\n                        >\r\n                            <div className=\"video-title\">{video.title}</div>\r\n                            <div className=\"video-controls\">\r\n                                <button\r\n                                    className={`reaction-btn ${likes[video.uid] ? 'active' : ''}`}\r\n                                    onClick={() => handleLike(video.uid)}\r\n                                >\r\n                                    •ᴗ•\r\n                                </button>\r\n                                <button\r\n                                    className={`reaction-btn ${dislikes[video.uid] ? 'noactive' : ''}`}\r\n                                    onClick={() => handleDislike(video.uid)}\r\n                                >\r\n                                    ˙◠˙\r\n                                </button>\r\n                            </div>\r\n                            {hoveredVideo && hoveredVideo.uid === video.uid && (\r\n                                <div className=\"tooltip\">\r\n                                    <div className=\"video-category\">\r\n                                        <strong>Категория:</strong> {video.category_name}\r\n                                    </div>\r\n                                    <div className=\"video-date\">\r\n                                        <strong>Дата:</strong> {video.created_at}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"current-date\">{video.created_at}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <div className=\"refresh-recommendations\">\r\n                <button \r\n                    className=\"refresh-btn\" \r\n                    onClick={handleRefresh} \r\n                    disabled={refreshing} // Disable button while refreshing\r\n                >\r\n                    {refreshing ? 'Обновление...' : 'Обновить рекомендации'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMkB,WAAW,GAAIC,KAAK,IAAK;MAC3B,IAAIA,KAAK,CAACC,OAAO,EAAE;QACfD,KAAK,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;MAC5B;IACJ,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEL,WAAW,EAAE;MAAEM,OAAO,EAAE;IAAM,CAAC,CAAC;IAEjE,OAAO,MAAM;MACTF,MAAM,CAACG,mBAAmB,CAAC,OAAO,EAAEP,WAAW,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,WAAW,GAAG,MAAAA,CAAOC,UAAU,GAAG,CAAC,KAAK;IAC1C,MAAMC,QAAQ,GAAG,mCAAmC;IACpDrB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,CAAC;MACtC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGH,QAAQ,CAACI,UAAU,CAAC;MACzE;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,IAAI,CAAC,CAAC,CAAC;MACnDzB,SAAS,CAACyB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZ,IAAIX,UAAU,GAAG,CAAC,EAAE;QAChBY,UAAU,CAAC,MAAM;UACbb,WAAW,CAACC,UAAU,GAAG,CAAC,CAAC;QAC/B,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,MAAM;QACHS,OAAO,CAACE,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC/E;IACJ,CAAC,SAAS;MACN/B,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACAP,SAAS,CAAC,MAAM;IACZ0B,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9BvB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB,MAAMwB,UAAU,GAAG,qDAAqD;IAExE,MAAMC,OAAO,GAAGlC,MAAM,CAACmC,GAAG,CAACC,KAAK,KAAK;MACjCC,GAAG,EAAED,KAAK,CAACC,GAAG;MACdC,SAAS,EAAElC,KAAK,CAACgC,KAAK,CAACC,GAAG,CAAC,IAAI,KAAK;MACpCE,YAAY,EAAEjC,QAAQ,CAAC8B,KAAK,CAACC,GAAG,CAAC,IAAI;IACzC,CAAC,CAAC,CAAC;IAEHT,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,OAAO,CAAC;IACxCN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,OAAO,CAAC,CAAC,CAAC;;IAG1C,IAAI;MACA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACW,UAAU,EAAE;QACrCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;MAChC,CAAC,CAAC;MAEF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MAEA,MAAMqB,MAAM,GAAG,MAAMxB,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEgB,MAAM,CAAC;MAE5C,MAAM3B,WAAW,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACNrB,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1B;EACJ,CAAC;;EAED;EACA,MAAMqC,UAAU,GAAIT,GAAG,IAAK;IACxBhC,QAAQ,CAAC0C,SAAS,KAAK;MACnB,GAAGA,SAAS;MACZ,CAACV,GAAG,GAAG,CAACU,SAAS,CAACV,GAAG,CAAC,CAAE;IAC5B,CAAC,CAAC,CAAC;IACH9B,WAAW,CAACyC,YAAY,KAAK;MACzB,GAAGA,YAAY;MACf,CAACX,GAAG,GAAG,KAAK,CAAE;IAClB,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA,MAAMY,aAAa,GAAIZ,GAAG,IAAK;IAC3B9B,WAAW,CAACyC,YAAY,KAAK;MACzB,GAAGA,YAAY;MACf,CAACX,GAAG,GAAG,CAACW,YAAY,CAACX,GAAG,CAAC,CAAE;IAC/B,CAAC,CAAC,CAAC;IACHhC,QAAQ,CAAC0C,SAAS,KAAK;MACnB,GAAGA,SAAS;MACZ,CAACV,GAAG,GAAG,KAAK,CAAE;IAClB,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACI1C,OAAA;IAAKuD,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBxD,OAAA;MAAKyD,GAAG,EAAE3D,IAAK;MAAC4D,GAAG,EAAC,4CAAS;MAACH,SAAS,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChD3D,OAAO,gBACJH,OAAA;MAAKuD,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE3D9D,OAAA;MAAKuD,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBnD,MAAM,CAACmC,GAAG,CAAEC,KAAK,iBACdzC,OAAA;QACIuD,SAAS,EAAC,YAAY;QAEtBQ,YAAY,EAAEA,CAAA,KAAMvD,eAAe,CAACiC,KAAK,CAAE;QAC3CuB,YAAY,EAAEA,CAAA,KAAMxD,eAAe,CAAC,IAAI,CAAE;QAAAgD,QAAA,gBAE1CxD,OAAA;UAAKuD,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEf,KAAK,CAACwB;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChD9D,OAAA;UAAKuD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BxD,OAAA;YACIuD,SAAS,EAAE,gBAAgB9C,KAAK,CAACgC,KAAK,CAACC,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC9DwB,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAACV,KAAK,CAACC,GAAG,CAAE;YAAAc,QAAA,EACxC;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT9D,OAAA;YACIuD,SAAS,EAAE,gBAAgB5C,QAAQ,CAAC8B,KAAK,CAACC,GAAG,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;YACnEwB,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAACb,KAAK,CAACC,GAAG,CAAE;YAAAc,QAAA,EAC3C;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EACLvD,YAAY,IAAIA,YAAY,CAACmC,GAAG,KAAKD,KAAK,CAACC,GAAG,iBAC3C1C,OAAA;UAAKuD,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACpBxD,OAAA;YAAKuD,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3BxD,OAAA;cAAAwD,QAAA,EAAQ;YAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACrB,KAAK,CAAC0B,aAAa;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACN9D,OAAA;YAAKuD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBxD,OAAA;cAAAwD,QAAA,EAAQ;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACrB,KAAK,CAAC2B,UAAU;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR,eACD9D,OAAA;UAAKuD,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEf,KAAK,CAAC2B;QAAU;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GA7BjDrB,KAAK,CAACC,GAAG;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8Bb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eACD9D,OAAA;MAAKuD,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eACpCxD,OAAA;QACIuD,SAAS,EAAC,aAAa;QACvBW,OAAO,EAAE7B,aAAc;QACvBgC,QAAQ,EAAExD,UAAW,CAAC;QAAA;QAAA2C,QAAA,EAErB3C,UAAU,GAAG,eAAe,GAAG;MAAuB;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC5D,EAAA,CA3KID,SAAS;AAAAqE,EAAA,GAATrE,SAAS;AA6Kf,eAAeA,SAAS;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}