{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ideapad\\\\PVD_Hackaton-main\\\\Frontend\\\\src\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Импортируем необходимые модули из React и хуки useState и useEffect\nimport { useNavigate } from 'react-router-dom'; // Импортируем навигацию для переходов по страницам\nimport './Result.css'; // Импортируем CSS файл для стилизации\nimport logo from './Logo.png'; // Импортируем логотип\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const navigate = useNavigate(); // Функция для навигации между страницами\n  const [reportVisible, setReportVisible] = useState(false); // Состояние для видимости отчета\n  const [results, setResults] = useState([]); // Состояние для хранения результатов\n  const [loading, setLoading] = useState(false); // Состояние загрузки\n\n  // Обработчик нажатия кнопки формирования отчета\n  const handleButtonClick = async () => {\n    setLoading(true); // Устанавливаем состояние загрузки\n    try {\n      // Отправляем запрос для получения данных\n      const response = await fetch('http://localhost:8000/api/clients/');\n      if (!response.ok) {\n        throw new Error('Ошибка сети.'); // Обрабатываем ошибки ответа\n      }\n      const data = await response.json(); // Получаем данные в формате JSON\n      setResults(data || []); // Устанавливаем полученные данные в состояние\n      setReportVisible(true); // Делаем отчет видимым\n    } catch (error) {\n      console.error('Ошибка получения данных:', error); // Выводим ошибку в консоль\n      // Здесь можно добавить обработку ошибки, например, уведомление для пользователя\n    } finally {\n      setLoading(false); // Сбрасываем состояние загрузки\n    }\n  };\n\n  // Обработчик нажатия кнопки сброса\n  const handleResetButtonClick = () => {\n    navigate('/'); // Переход на страницу FileUploader\n  };\n\n  // Используем эффект для инициализации состояния при загрузке компонента\n  useEffect(() => {\n    setReportVisible(false); // Скрываем отчет при загрузке\n    setResults([]); // Очищаем результаты\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rating-button\",\n      onClick: handleButtonClick,\n      children: \"\\u0421\\u0444\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-text\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), \" \", reportVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-content\",\n        children: results.length > 0 ?\n        // Если есть результаты, отображаем их\n        results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-line\",\n          children: `ID: ${result.id}, Наименование деятельности: ${result.OKVED2Name}, Шанс ухода: ${result.leavingChance}`\n        }, result.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-line\",\n          children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this) // Если результатов нет\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: handleResetButtonClick,\n      children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0441\\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Result, \"1CzU0emnHwVOU6Y5yOtoWR8nsME=\", false, function () {\n  return [useNavigate];\n});\n_c = Result;\nexport default Result; // Экспортируем компонент\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","logo","jsxDEV","_jsxDEV","Result","_s","navigate","reportVisible","setReportVisible","results","setResults","loading","setLoading","handleButtonClick","response","fetch","ok","Error","data","json","error","console","handleResetButtonClick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","result","id","OKVED2Name","leavingChance","_c","$RefreshReg$"],"sources":["C:/Users/Ideapad/PVD_Hackaton-main/Frontend/src/Result.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Импортируем необходимые модули из React и хуки useState и useEffect\r\nimport { useNavigate } from 'react-router-dom'; // Импортируем навигацию для переходов по страницам\r\nimport './Result.css'; // Импортируем CSS файл для стилизации\r\nimport logo from './Logo.png'; // Импортируем логотип\r\n\r\nconst Result = () => {\r\n    const navigate = useNavigate(); // Функция для навигации между страницами\r\n    const [reportVisible, setReportVisible] = useState(false); // Состояние для видимости отчета\r\n    const [results, setResults] = useState([]); // Состояние для хранения результатов\r\n    const [loading, setLoading] = useState(false); // Состояние загрузки\r\n\r\n    // Обработчик нажатия кнопки формирования отчета\r\n    const handleButtonClick = async () => {\r\n        setLoading(true); // Устанавливаем состояние загрузки\r\n        try {\r\n            // Отправляем запрос для получения данных\r\n            const response = await fetch('http://localhost:8000/api/clients/');\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка сети.'); // Обрабатываем ошибки ответа\r\n            }\r\n            const data = await response.json(); // Получаем данные в формате JSON\r\n            setResults(data || []); // Устанавливаем полученные данные в состояние\r\n            setReportVisible(true); // Делаем отчет видимым\r\n        } catch (error) {\r\n            console.error('Ошибка получения данных:', error); // Выводим ошибку в консоль\r\n            // Здесь можно добавить обработку ошибки, например, уведомление для пользователя\r\n        } finally {\r\n            setLoading(false); // Сбрасываем состояние загрузки\r\n        }\r\n    };\r\n\r\n    // Обработчик нажатия кнопки сброса\r\n    const handleResetButtonClick = () => {\r\n        navigate('/'); // Переход на страницу FileUploader\r\n    };\r\n\r\n    // Используем эффект для инициализации состояния при загрузке компонента\r\n    useEffect(() => {\r\n        setReportVisible(false); // Скрываем отчет при загрузке\r\n        setResults([]); // Очищаем результаты\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"result-container\"> {/* Основной контейнер для страницы результатов */}\r\n            <div className=\"header\">\r\n                <img src={logo} alt=\"Логотип\" className=\"logo\" /> {/* Логотип */}\r\n            </div>\r\n            <button className=\"rating-button\" onClick={handleButtonClick}>\r\n                Сформировать отчет {/* Кнопка для формирования отчета */}\r\n            </button>\r\n\r\n            {loading && <div className=\"loading-text\">Загрузка...</div>} {/* Текст загрузки, если данные загружаются */}\r\n\r\n            {reportVisible && (\r\n                <div className=\"report-container\"> {/* Контейнер для отчета */}\r\n                    <div className=\"report-content\">\r\n                        {results.length > 0 ? (\r\n                            // Если есть результаты, отображаем их\r\n                            results.map(result => (\r\n                                <div key={result.id} className=\"report-line\">\r\n                                    {`ID: ${result.id}, Наименование деятельности: ${result.OKVED2Name}, Шанс ухода: ${result.leavingChance}`}\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <div className=\"report-line\">Нет данных для отображения.</div> // Если результатов нет\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <button className=\"reset-button\" onClick={handleResetButtonClick}>\r\n                Начать сначала {/* Кнопка для сброса и перехода на начальную страницу */}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Result; // Экспортируем компонент\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}