{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ideapad\\\\Downloads\\\\Gkh \\u0445\\u0430\\u043A\\u0430\\u0442\\u043E\\u043D\\\\Frontend\\\\src\\\\components\\\\AuthModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Импортируем необходимые модули React и useState\nimport { useNavigate } from 'react-router-dom'; // Импортируем navigate для перехода между страницами\nimport './FileUploader.css'; // Импортируем CSS файл для стилизации\nimport backgroundImage from './train.jpeg'; // Импортируем изображение для фона\nimport backgroundImage2 from './Road.jpg'; // Импортируем второе изображение для фона\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUploader = () => {\n  _s();\n  const navigate = useNavigate(); // Функция для навигации\n  const [fileName, setFileName] = useState(''); // Состояние для имени загруженного файла\n  const [errorMessage, setErrorMessage] = useState(''); // Состояние для сообщения об ошибке\n  const [isFileUploaded, setIsFileUploaded] = useState(false); // Состояние для отслеживания загрузки файла\n  const [isSolutionReady, setIsSolutionReady] = useState(false); // Состояние для отслеживания готовности решения\n  const [isLoading, setIsLoading] = useState(false); // Состояние для отображения загрузки\n  const [isFilterVisible, setIsFilterVisible] = useState(false); // Состояние для отображения фильтров\n  const [cityInput, setCityInput] = useState(''); // Состояние для ввода города\n  const [selectedCity, setSelectedCity] = useState(''); // Состояние для выбранного города\n  const [cities, setCities] = useState([]); // Состояние для списка городов\n  const [isFilterSubmitted, setIsFilterSubmitted] = useState(false); // Состояние для отслеживания отправки фильтров\n\n  // Состояния для фильтров\n  const [mspRegistry, setMspRegistry] = useState('');\n  const [companySize, setCompanySize] = useState('');\n  const [shipper, setShipper] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const [resultAvailable, setResultAvailable] = useState(false); // Состояние для отслеживания наличия результатов\n  const [filters, setFilters] = useState({\n    mspRegistry: '',\n    companySize: '',\n    city: '',\n    shipper: '',\n    receiver: ''\n  }); // Состояние для фильтров\n  const [isSubmittingFilters, setIsSubmittingFilters] = useState(false); // Состояние для отслеживания отправки фильтров\n\n  // Обработчик изменения файла\n  const handleFileChange = event => {\n    const file = event.target.files[0]; // Получаем выбранный файл\n\n    if (file) {\n      const fileName = String(file.name).toLowerCase(); // Преобразуем имя файла в нижний регистр\n      const isZip = fileName.endsWith('.zip'); // Проверяем, является ли файл ZIP\n\n      if (isZip) {\n        setFileName(file.name); // Устанавливаем имя файла\n        setErrorMessage(''); // Очищаем сообщение об ошибке\n        setIsFileUploaded(true); // Файл загружен\n        setIsSolutionReady(false); // Решение не готово\n        setResultAvailable(false); // Результат недоступен\n      } else {\n        // Если файл не является ZIP\n        setFileName('');\n        setErrorMessage('Формат файла не подходит. Пожалуйста, загрузите только ZIP файл.'); // Сообщение об ошибке\n        setIsFileUploaded(false); // Файл не загружен\n      }\n    } else {\n      setFileName('');\n      setIsFileUploaded(false); // Если файл не выбран\n    }\n  };\n\n  // Обработчик нажатия кнопки загрузки\n  const handleUploadButtonClick = () => {\n    document.getElementById('file-input').click(); // Нажимаем на скрытый input для выбора файла\n  };\n\n  // Обработчик нажатия кнопки проверки результата\n  const handleCheckResultClick = async () => {\n    if (!isFileUploaded) {\n      setErrorMessage('Загрузите файл перед отправкой.'); // Сообщение, если файл не загружен\n      return;\n    }\n    const formData = new FormData(); // Формируем данные для отправки\n    formData.append('file', document.getElementById('file-input').files[0]); // Добавляем файл в formData\n    setIsLoading(true); // Устанавливаем индикатор загрузки\n\n    try {\n      // Отправляем файл на сервер\n      const response = await fetch('http://localhost:8000/api/clients/upload-zip/', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) throw new Error('Ошибка при отправке файла для проверки'); // Обрабатываем ошибку\n\n      const result = await response.json(); // Получаем ответ от сервера\n      alert('Данные успешно отправлены'); // Успешное сообщение\n      setCities(result.cities || []); // Устанавливаем список городов\n      setIsSolutionReady(true); // Решение готово\n      setResultAvailable(false); // Результат пока недоступен\n    } catch (error) {\n      setErrorMessage('Ошибка при проверке результата. '); // Обрабатываем ошибку\n    } finally {\n      setIsSolutionReady(true); // Устанавливаем решение как готовое\n      setIsLoading(false); // Завершаем индикатор загрузки\n    }\n  };\n\n  // Обработчик нажатия кнопки показать результат\n  const handleShowResultClick = () => {\n    if (resultAvailable) {\n      navigate('/result'); // Переходим на страницу результатов\n    }\n  };\n\n  // Функция для перевода значений перед отправкой\n  const translateForSubmit = value => {\n    switch (value) {\n      case 'yes':\n        return 'Да';\n      case 'no':\n        return 'Нет';\n      case 'micro':\n        return 'Микробизнес';\n      case 'small':\n        return 'Малый бизнес';\n      case 'medium':\n        return 'Средний бизнес';\n      case 'large':\n        return 'Крупный бизнес';\n      default:\n        return value;\n      // Если значение не найдено, возвращаем его без изменений\n    }\n  };\n\n  // Обработчик нажатия кнопки отправки фильтров\n  const handleSubmitClick = async () => {\n    setIsSubmittingFilters(true); // Устанавливаем индикатор загрузки\n    const url = new URL(\"http://localhost:8000/api/clients/\"); // Создаем новый URL для запроса\n    const params = {\n      isMSP: translateForSubmit(filters.mspRegistry) === 'Да' ? 'Да' : filters.mspRegistry === '' ? '0' : 'Нет',\n      // Преобразуем значение мсп\n      companySize: filters.companySize ? translateForSubmit(filters.companySize) : '0',\n      // Преобразуем размер компании\n      cityActual: selectedCity || '0',\n      // Устанавливаем выбранный город\n      shipper: translateForSubmit(shipper) || '0',\n      // Преобразуем накладную\n      consignee: translateForSubmit(receiver) || '0' // Преобразуем получателя\n    };\n\n    // Добавляем параметры в URL\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    try {\n      // Отправляем запрос на сервер с параметрами фильтрации\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) throw new Error('Ошибка при отправке данных'); // Обрабатываем ошибку\n\n      const data = await response.json(); // Получаем данные из ответа\n      console.log(\"Filtered clients:\", data); // Выводим отфильтрованных клиентов в консоль\n      alert('Данные успешно отправлены с фильтром'); // Успешное сообщение\n      setResultAvailable(true); // Результат доступен\n      setIsFilterSubmitted(true); // Фильтры отправлены\n    } catch (error) {\n      setErrorMessage('Ошибка при отправке данных с фильтром.'); // Обрабатываем ошибку\n    } finally {\n      setIsFileUploaded(false); // Сбрасываем состояние загрузки файла\n      setIsSubmittingFilters(false); // Завершаем индикатор загрузки\n    }\n  };\n\n  // Обработчик нажатия кнопки начать заново\n  const handleStartOverClick = () => {\n    // Сбрасываем все состояния\n    setFileName('');\n    setErrorMessage('');\n    setIsFileUploaded(false);\n    setIsSolutionReady(false);\n    setCities([]);\n    setIsFilterVisible(false);\n    setCityInput('');\n    setSelectedCity('');\n    setMspRegistry('');\n    setCompanySize('');\n    setShipper('');\n    setReceiver('');\n    setResultAvailable(false);\n    setFilters({\n      mspRegistry: '',\n      companySize: '',\n      city: '',\n      shipper: '',\n      receiver: ''\n    });\n    setIsFilterSubmitted(false);\n    document.getElementById('file-input').value = ''; // Очищаем input для файла\n  };\n\n  // Обработчик переключения видимости фильтров\n  const toggleFilter = () => {\n    setIsFilterVisible(!isFilterVisible); // Переключаем видимость фильтров\n  };\n\n  // Обработчик сохранения настроек фильтров\n  const saveFilterSettings = () => {\n    setFilters({\n      mspRegistry: mspRegistry !== '' ? mspRegistry : '0',\n      companySize: companySize !== '' ? companySize : '0',\n      city: selectedCity !== '' ? selectedCity : '0',\n      shipper: shipper !== '' ? shipper : '0',\n      receiver: receiver !== '' ? receiver : '0'\n    });\n    alert('Значения сохранены!'); // Успешное сообщение\n  };\n\n  // Обработчик изменения ввода города\n  const handleCityInputChange = e => {\n    setCityInput(e.target.value); // Устанавливаем значение ввода города\n  };\n\n  // Обработчик выбора города\n  const handleCitySelect = city => {\n    setSelectedCity(city); // Устанавливаем выбранный город\n    setCityInput(''); // Очищаем ввод города\n  };\n\n  // Фильтруем города на основе ввода\n  const filteredCities = cities.filter(city => city.toLowerCase().includes(cityInput.toLowerCase()) // Возвращаем только подходящие города\n  );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashed-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"file-prompt-text\",\n        children: fileName || 'Выберите файл'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 24\n    }, this), \" \", isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }, this), \" \", isSubmittingFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u043E\\u0432...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 31\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-input\",\n      accept: \".zip\",\n      onChange: handleFileChange,\n      style: {\n        display: 'none'\n      } // Скрытый input для файла\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUploadButtonClick,\n      className: \"upload-button\",\n      disabled: isSolutionReady,\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C ZIP \\u0444\\u0430\\u0439\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isSolutionReady ? handleSubmitClick : handleCheckResultClick,\n      className: \"submit-button\",\n      children: isSolutionReady ? 'Отправить фильтры' : 'Отправить файл'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"result-button\",\n      onClick: handleShowResultClick,\n      style: {\n        backgroundColor: resultAvailable ? '#007BFF' : '#B0B0B0',\n        cursor: resultAvailable ? 'pointer' : 'not-allowed'\n      },\n      disabled: !resultAvailable // Кнопка для показа результата\n      ,\n      children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), isFileUploaded && isSolutionReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button\",\n        onClick: toggleFilter,\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), isFilterVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-modal\",\n        style: {\n          backgroundImage: `url(${backgroundImage2})`\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u041D\\u0430\\u0445\\u043E\\u0434\\u0438\\u0442\\u0441\\u044F \\u0432 \\u0440\\u0435\\u0435\\u0441\\u0442\\u0440\\u0435 \\u041C\\u0421\\u041F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: mspRegistry,\n              onChange: e => setMspRegistry(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"yes\",\n                children: \"\\u0414\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"no\",\n                children: \"\\u041D\\u0435\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: companySize,\n              onChange: e => setCompanySize(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"micro\",\n                children: \"\\u041C\\u0438\\u043A\\u0440\\u043E\\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"small\",\n                children: \"\\u041C\\u0430\\u043B\\u044B\\u0439 \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"medium\",\n                children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"large\",\n                children: \"\\u041A\\u0440\\u0443\\u043F\\u043D\\u044B\\u0439 \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u0413\\u043E\\u0440\\u043E\\u0434:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: cityInput,\n                placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n                onChange: handleCityInputChange,\n                onFocus: () => setCityInput('') // Очищаем ввод при фокусе\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this), cityInput && /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"city-suggestions\",\n                children: filteredCities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => handleCitySelect(city),\n                  children: city\n                }, city, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0433\\u043E\\u0440\\u043E\\u0434: \", selectedCity || 'Не выбран']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u0413\\u0440\\u0443\\u0437\\u043E\\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: shipper,\n              onChange: e => setShipper(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"yes\",\n                children: \"\\u0414\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"no\",\n                children: \"\\u041D\\u0435\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u0413\\u0440\\u0443\\u0437\\u043E\\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: receiver,\n              onChange: e => setReceiver(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"yes\",\n                children: \"\\u0414\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"no\",\n                children: \"\\u041D\\u0435\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveFilterSettings,\n          className: \"save-button\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFilter,\n          className: \"close-button\",\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), isFilterSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-over-button\",\n      onClick: handleStartOverClick,\n      children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"bBUQ5hGEtOKkNI5koIdkI+plfec=\", false, function () {\n  return [useNavigate];\n});\n_c = FileUploader;\nexport default FileUploader; // Экспортируем компонент\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","useNavigate","backgroundImage","backgroundImage2","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploader","_s","navigate","fileName","setFileName","errorMessage","setErrorMessage","isFileUploaded","setIsFileUploaded","isSolutionReady","setIsSolutionReady","isLoading","setIsLoading","isFilterVisible","setIsFilterVisible","cityInput","setCityInput","selectedCity","setSelectedCity","cities","setCities","isFilterSubmitted","setIsFilterSubmitted","mspRegistry","setMspRegistry","companySize","setCompanySize","shipper","setShipper","receiver","setReceiver","resultAvailable","setResultAvailable","filters","setFilters","city","isSubmittingFilters","setIsSubmittingFilters","handleFileChange","event","file","target","files","String","name","toLowerCase","isZip","endsWith","handleUploadButtonClick","document","getElementById","click","handleCheckResultClick","formData","FormData","append","response","fetch","method","body","ok","Error","result","json","alert","error","handleShowResultClick","translateForSubmit","value","handleSubmitClick","url","URL","params","isMSP","cityActual","consignee","Object","keys","forEach","key","searchParams","headers","data","console","log","handleStartOverClick","toggleFilter","saveFilterSettings","handleCityInputChange","e","handleCitySelect","filteredCities","filter","includes","className","style","children","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","display","onClick","disabled","backgroundColor","cursor","placeholder","onFocus","map","_c","$RefreshReg$"],"sources":["C:/Users/Ideapad/Downloads/Gkh хакатон/Frontend/src/components/AuthModal.jsx"],"sourcesContent":["import React, { useState } from 'react'; // Импортируем необходимые модули React и useState\r\nimport { useNavigate } from 'react-router-dom'; // Импортируем navigate для перехода между страницами\r\nimport './FileUploader.css'; // Импортируем CSS файл для стилизации\r\nimport backgroundImage from './train.jpeg'; // Импортируем изображение для фона\r\nimport backgroundImage2 from './Road.jpg'; // Импортируем второе изображение для фона\r\n\r\nconst FileUploader = () => {\r\n  const navigate = useNavigate(); // Функция для навигации\r\n  const [fileName, setFileName] = useState(''); // Состояние для имени загруженного файла\r\n  const [errorMessage, setErrorMessage] = useState(''); // Состояние для сообщения об ошибке\r\n  const [isFileUploaded, setIsFileUploaded] = useState(false); // Состояние для отслеживания загрузки файла\r\n  const [isSolutionReady, setIsSolutionReady] = useState(false); // Состояние для отслеживания готовности решения\r\n  const [isLoading, setIsLoading] = useState(false); // Состояние для отображения загрузки\r\n  const [isFilterVisible, setIsFilterVisible] = useState(false); // Состояние для отображения фильтров\r\n  const [cityInput, setCityInput] = useState(''); // Состояние для ввода города\r\n  const [selectedCity, setSelectedCity] = useState(''); // Состояние для выбранного города\r\n  const [cities, setCities] = useState([]); // Состояние для списка городов\r\n  const [isFilterSubmitted, setIsFilterSubmitted] = useState(false); // Состояние для отслеживания отправки фильтров\r\n\r\n  // Состояния для фильтров\r\n  const [mspRegistry, setMspRegistry] = useState('');\r\n  const [companySize, setCompanySize] = useState('');\r\n  const [shipper, setShipper] = useState('');\r\n  const [receiver, setReceiver] = useState('');\r\n\r\n  const [resultAvailable, setResultAvailable] = useState(false); // Состояние для отслеживания наличия результатов\r\n  const [filters, setFilters] = useState({ mspRegistry: '', companySize: '', city: '', shipper: '', receiver: '' }); // Состояние для фильтров\r\n  const [isSubmittingFilters, setIsSubmittingFilters] = useState(false); // Состояние для отслеживания отправки фильтров\r\n\r\n  // Обработчик изменения файла\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0]; // Получаем выбранный файл\r\n\r\n    if (file) {\r\n      const fileName = String(file.name).toLowerCase(); // Преобразуем имя файла в нижний регистр\r\n      const isZip = fileName.endsWith('.zip'); // Проверяем, является ли файл ZIP\r\n\r\n      if (isZip) {\r\n        setFileName(file.name); // Устанавливаем имя файла\r\n        setErrorMessage(''); // Очищаем сообщение об ошибке\r\n        setIsFileUploaded(true); // Файл загружен\r\n        setIsSolutionReady(false); // Решение не готово\r\n        setResultAvailable(false); // Результат недоступен\r\n      } else {\r\n        // Если файл не является ZIP\r\n        setFileName('');\r\n        setErrorMessage('Формат файла не подходит. Пожалуйста, загрузите только ZIP файл.'); // Сообщение об ошибке\r\n        setIsFileUploaded(false); // Файл не загружен\r\n      }\r\n    } else {\r\n      setFileName('');\r\n      setIsFileUploaded(false); // Если файл не выбран\r\n    }\r\n  };\r\n\r\n  // Обработчик нажатия кнопки загрузки\r\n  const handleUploadButtonClick = () => {\r\n    document.getElementById('file-input').click(); // Нажимаем на скрытый input для выбора файла\r\n  };\r\n\r\n  // Обработчик нажатия кнопки проверки результата\r\n  const handleCheckResultClick = async () => {\r\n    if (!isFileUploaded) {\r\n      setErrorMessage('Загрузите файл перед отправкой.'); // Сообщение, если файл не загружен\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData(); // Формируем данные для отправки\r\n    formData.append('file', document.getElementById('file-input').files[0]); // Добавляем файл в formData\r\n    setIsLoading(true); // Устанавливаем индикатор загрузки\r\n\r\n    try {\r\n      // Отправляем файл на сервер\r\n      const response = await fetch('http://localhost:8000/api/clients/upload-zip/', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Ошибка при отправке файла для проверки'); // Обрабатываем ошибку\r\n\r\n      const result = await response.json(); // Получаем ответ от сервера\r\n      alert('Данные успешно отправлены'); // Успешное сообщение\r\n      setCities(result.cities || []); // Устанавливаем список городов\r\n      setIsSolutionReady(true); // Решение готово\r\n      setResultAvailable(false); // Результат пока недоступен\r\n    } catch (error) {\r\n      setErrorMessage('Ошибка при проверке результата. '); // Обрабатываем ошибку\r\n    } finally {\r\n      setIsSolutionReady(true); // Устанавливаем решение как готовое\r\n      setIsLoading(false); // Завершаем индикатор загрузки\r\n    }\r\n  };\r\n\r\n  // Обработчик нажатия кнопки показать результат\r\n  const handleShowResultClick = () => {\r\n    if (resultAvailable) {\r\n      navigate('/result'); // Переходим на страницу результатов\r\n    }\r\n  };\r\n\r\n  // Функция для перевода значений перед отправкой\r\n  const translateForSubmit = (value) => {\r\n    switch (value) {\r\n      case 'yes':\r\n        return 'Да';\r\n      case 'no':\r\n        return 'Нет';\r\n      case 'micro':\r\n        return 'Микробизнес';\r\n      case 'small':\r\n        return 'Малый бизнес';\r\n      case 'medium':\r\n        return 'Средний бизнес';\r\n      case 'large':\r\n        return 'Крупный бизнес';\r\n      default:\r\n        return value; // Если значение не найдено, возвращаем его без изменений\r\n    }\r\n  };\r\n\r\n  // Обработчик нажатия кнопки отправки фильтров\r\n  const handleSubmitClick = async () => {\r\n    setIsSubmittingFilters(true); // Устанавливаем индикатор загрузки\r\n    const url = new URL(\"http://localhost:8000/api/clients/\"); // Создаем новый URL для запроса\r\n    const params = {\r\n      isMSP: translateForSubmit(filters.mspRegistry) === 'Да' ? 'Да' : (filters.mspRegistry === '' ? '0' : 'Нет'), // Преобразуем значение мсп\r\n      companySize: filters.companySize ? translateForSubmit(filters.companySize) : '0', // Преобразуем размер компании\r\n      cityActual: selectedCity || '0', // Устанавливаем выбранный город\r\n      shipper: translateForSubmit(shipper) || '0', // Преобразуем накладную\r\n      consignee: translateForSubmit(receiver) || '0', // Преобразуем получателя\r\n    };\r\n\r\n    // Добавляем параметры в URL\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    try {\r\n      // Отправляем запрос на сервер с параметрами фильтрации\r\n      const response = await fetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Ошибка при отправке данных'); // Обрабатываем ошибку\r\n\r\n      const data = await response.json(); // Получаем данные из ответа\r\n      console.log(\"Filtered clients:\", data); // Выводим отфильтрованных клиентов в консоль\r\n      alert('Данные успешно отправлены с фильтром'); // Успешное сообщение\r\n      setResultAvailable(true); // Результат доступен\r\n      setIsFilterSubmitted(true); // Фильтры отправлены\r\n    } catch (error) {\r\n      setErrorMessage('Ошибка при отправке данных с фильтром.'); // Обрабатываем ошибку\r\n    } finally {\r\n      setIsFileUploaded(false); // Сбрасываем состояние загрузки файла\r\n      setIsSubmittingFilters(false); // Завершаем индикатор загрузки\r\n    }\r\n  };\r\n\r\n  // Обработчик нажатия кнопки начать заново\r\n  const handleStartOverClick = () => {\r\n    // Сбрасываем все состояния\r\n    setFileName('');\r\n    setErrorMessage('');\r\n    setIsFileUploaded(false);\r\n    setIsSolutionReady(false);\r\n    setCities([]);\r\n    setIsFilterVisible(false);\r\n    setCityInput('');\r\n    setSelectedCity('');\r\n    setMspRegistry('');\r\n    setCompanySize('');\r\n    setShipper('');\r\n    setReceiver('');\r\n    setResultAvailable(false);\r\n    setFilters({ mspRegistry: '', companySize: '', city: '', shipper: '', receiver: '' });\r\n    setIsFilterSubmitted(false);\r\n    document.getElementById('file-input').value = ''; // Очищаем input для файла\r\n  };\r\n\r\n  // Обработчик переключения видимости фильтров\r\n  const toggleFilter = () => {\r\n    setIsFilterVisible(!isFilterVisible); // Переключаем видимость фильтров\r\n  };\r\n\r\n  // Обработчик сохранения настроек фильтров\r\n  const saveFilterSettings = () => {\r\n    setFilters({\r\n      mspRegistry: mspRegistry !== '' ? mspRegistry : '0',\r\n      companySize: companySize !== '' ? companySize : '0',\r\n      city: selectedCity !== '' ? selectedCity : '0',\r\n      shipper: shipper !== '' ? shipper : '0',\r\n      receiver: receiver !== '' ? receiver : '0',\r\n    });\r\n    alert('Значения сохранены!'); // Успешное сообщение\r\n  };\r\n\r\n  // Обработчик изменения ввода города\r\n  const handleCityInputChange = (e) => {\r\n    setCityInput(e.target.value); // Устанавливаем значение ввода города\r\n  };\r\n\r\n  // Обработчик выбора города\r\n  const handleCitySelect = (city) => {\r\n    setSelectedCity(city); // Устанавливаем выбранный город\r\n    setCityInput(''); // Очищаем ввод города\r\n  };\r\n\r\n  // Фильтруем города на основе ввода\r\n  const filteredCities = cities.filter(city =>\r\n    city.toLowerCase().includes(cityInput.toLowerCase()) // Возвращаем только подходящие города\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\" style={{ backgroundImage: `url(${backgroundImage})` }}> {/* Основной контейнер с фоном */}\r\n      <div className=\"dashed-box\">\r\n        <span className=\"file-prompt-text\">{fileName || 'Выберите файл'}</span> {/* Текст с названием файла или подсказкой */}\r\n      </div>\r\n      {errorMessage && <div className=\"tooltip\">{errorMessage}</div>} {/* Сообщение об ошибке */}\r\n      {isLoading && <div className=\"loading-message\">Загрузка...</div>} {/* Индикатор загрузки */}\r\n      {isSubmittingFilters && <div className=\"loading-message\">Отправка фильтров...</div>} {/* Индикатор загрузки при отправке фильтров */}\r\n      <input\r\n        type=\"file\"\r\n        id=\"file-input\"\r\n        accept=\".zip\"\r\n        onChange={handleFileChange}\r\n        style={{ display: 'none' }} // Скрытый input для файла\r\n      />\r\n      <button onClick={handleUploadButtonClick} className=\"upload-button\" disabled={isSolutionReady}>\r\n        Загрузить ZIP файл\r\n      </button>\r\n\r\n      <button onClick={isSolutionReady ? handleSubmitClick : handleCheckResultClick} className=\"submit-button\">\r\n        {isSolutionReady ? 'Отправить фильтры' : 'Отправить файл'}\r\n      </button>\r\n\r\n      <button \r\n        className=\"result-button\" \r\n        onClick={handleShowResultClick} \r\n        style={{ \r\n          backgroundColor: resultAvailable ? '#007BFF' : '#B0B0B0', \r\n          cursor: resultAvailable ? 'pointer' : 'not-allowed' \r\n        }}\r\n        disabled={!resultAvailable} // Кнопка для показа результата\r\n      >\r\n        Показать результат\r\n      </button>\r\n\r\n      {isFileUploaded && isSolutionReady && (\r\n        <>\r\n          <button className=\"filter-button\" onClick={toggleFilter}>\r\n            ☰\r\n          </button>\r\n\r\n          {isFilterVisible && (\r\n            <div className=\"filter-modal\" style={{ backgroundImage: `url(${backgroundImage2})` }}> {/* Модальное окно для фильтров */}\r\n              <h2>Фильтр</h2>\r\n              <div className=\"filter-content\">\r\n                <div>\r\n                  <h3>Находится в реестре МСП:</h3>\r\n                  <select value={mspRegistry} onChange={(e) => setMspRegistry(e.target.value)}>\r\n                    <option value=\"\">Выберите...</option>\r\n                    <option value=\"yes\">Да</option>\r\n                    <option value=\"no\">Нет</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <h3>Размер компании:</h3>\r\n                  <select value={companySize} onChange={(e) => setCompanySize(e.target.value)}>\r\n                    <option value=\"\">Выберите...</option>\r\n                    <option value=\"micro\">Микробизнес</option>\r\n                    <option value=\"small\">Малый бизнес</option>\r\n                    <option value=\"medium\">Средний бизнес</option>\r\n                    <option value=\"large\">Крупный бизнес</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <h3>Город:</h3>\r\n                  <div className=\"city-input-container\">\r\n                    <input \r\n                      type=\"text\" \r\n                      value={cityInput} \r\n                      placeholder=\"Поиск...\"\r\n                      onChange={handleCityInputChange}\r\n                      onFocus={() => setCityInput('')} // Очищаем ввод при фокусе\r\n                    />\r\n                    {cityInput && (\r\n                      <ul className=\"city-suggestions\">\r\n                        {filteredCities.map(city => (\r\n                          <li key={city} onClick={() => handleCitySelect(city)}>\r\n                            {city}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                  <p>Выбранный город: {selectedCity || 'Не выбран'}</p> {/* Показываем выбранный город */}\r\n                </div>\r\n                <div>\r\n                  <h3>Грузоотправитель:</h3>\r\n                  <select value={shipper} onChange={(e) => setShipper(e.target.value)}>\r\n                    <option value=\"\">Выберите...</option>\r\n                    <option value=\"yes\">Да</option>\r\n                    <option value=\"no\">Нет</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <h3>Грузополучатель:</h3>\r\n                  <select value={receiver} onChange={(e) => setReceiver(e.target.value)}>\r\n                    <option value=\"\">Выберите...</option>\r\n                    <option value=\"yes\">Да</option>\r\n                    <option value=\"no\">Нет</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button onClick={saveFilterSettings} className=\"save-button\">Сохранить</button> {/* Кнопка для сохранения настроек фильтров */}\r\n              <button onClick={toggleFilter} className=\"close-button\">Закрыть</button> {/* Кнопка для закрытия фильтров */}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {isFilterSubmitted && (\r\n        <button className=\"start-over-button\" onClick={handleStartOverClick}>\r\n          Начать заново\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader; // Экспортируем компонент\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}